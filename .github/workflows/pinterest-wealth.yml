name: Advanced Pinterest Diversity Engine

on:
  schedule:
    # GÜVENLİ VE YAVAŞ BAŞLANGIÇ
    - cron: '17 9 * * 1'     # Pazartesi 12:17
    - cron: '42 14 * * 3'    # Çarşamba 17:42
    - cron: '8 11 * * 5'     # Cuma 14:08
    - cron: '35 16 * * 6'    # Cumartesi 19:35
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  pinterest-diverse:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Dependencies
      run: |
        pip install requests pillow
    
    - name: Ultra Diverse Pinterest Content
      env:
        IFTTT_KEY: ${{ secrets.IFTTT_KEY }}
        IFTTT_EVENT: ${{ secrets.IFTTT_EVENT }}
        WEBSITE_URL: https://savetracker.site
        ACCOUNT_AGE_DAYS: 30  # Hesap yaşı (gün)
      run: |
        python << 'EOF'
        import requests
        import random
        import os
        import json
        import time
        import hashlib
        from datetime import datetime, timedelta
        import urllib.parse

        # ============================================
        # DİNAMİK PIN SAYISI HESAPLAMA
        # ============================================
        
        def calculate_safe_pin_count():
            """Hesap yaşına göre güvenli pin sayısı"""
            
            account_age = int(os.environ.get('ACCOUNT_AGE_DAYS', 1))
            
            if account_age < 7:
                max_daily_pins = 2
                schedule_info = "🐣 Yeni hesap: Günde max 2 pin"
            elif account_age < 14:
                max_daily_pins = 4
                schedule_info = "📈 2. hafta: Günde max 4 pin"
            elif account_age < 30:
                max_daily_pins = 8
                schedule_info = "🚀 3-4. hafta: Günde max 8 pin"
            elif account_age < 60:
                max_daily_pins = 12
                schedule_info = "💪 2. ay: Günde max 12 pin"
            elif account_age < 90:
                max_daily_pins = 15
                schedule_info = "⭐ 3. ay: Günde max 15 pin"
            else:
                max_daily_pins = 20
                schedule_info = "🏆 Mature hesap: Günde max 20 pin"
            
            print(f"📊 Hesap yaşı: {account_age} gün")
            print(f"📌 {schedule_info}")
            
            # Bugün kaç pin atıldığını say (normalde database'den gelir)
            # Şimdilik random bir sayı simüle edelim
            pins_today = random.randint(0, max(0, max_daily_pins - 5))
            remaining_pins = max_daily_pins - pins_today
            
            if remaining_pins <= 0:
                print("⚠️ Bugünkü pin limiti doldu!")
                return 0
            
            # Bu çalıştırmada kaç pin atacağız (1-3 arası)
            pins_this_run = min(remaining_pins, random.randint(1, 3))
            
            print(f"📍 Bugün atılan: {pins_today}")
            print(f"📍 Kalan limit: {remaining_pins}")
            print(f"✅ Bu sefer atacağımız: {pins_this_run}")
            
            return pins_this_run

        # ============================================
        # MEGA İÇERİK ÇEŞİTLİLİĞİ (50+ FARKLI TÜR)
        # ============================================
        
        mega_content_library = {
            
            # WEALTH & SUCCESS (Farklı açılar)
            "luxury_lifestyle": {
                "themes": [
                    "modern minimalist mansion with infinity pool overlooking city skyline at golden hour",
                    "cozy millionaire morning routine setup with coffee and financial newspaper",
                    "elegant home office with multiple monitors showing stock charts",
                    "luxury car keys on marble table next to investment portfolio",
                    "private jet window view of clouds during sunset",
                    "yacht deck with champagne glasses at mediterranean sunset"
                ],
                "styles": ["luxurious", "aspirational", "sophisticated"],
                "moods": ["inspiring", "motivating", "dreamy"]
            },
            
            "money_mindset": {
                "themes": [
                    "growing money tree with dollar bills as leaves in bright garden",
                    "golden piggy bank surrounded by coins in soft morning light",
                    "hand planting coin in soil with small plant sprouting",
                    "jar labeled dreams filling up with money over time",
                    "staircase made of gold coins leading to success door",
                    "sunrise over mountain of gold coins symbolizing new beginning"
                ],
                "styles": ["metaphorical", "symbolic", "conceptual"],
                "moods": ["hopeful", "empowering", "optimistic"]
            },
            
            "financial_education": {
                "themes": [
                    "clean desk with budget planner and colorful charts",
                    "laptop showing simple investment app interface",
                    "notebook with financial goals written in beautiful handwriting",
                    "calculator and coins arranged teaching compound interest",
                    "infographic style visualization of savings growth",
                    "bookshelf with personal finance books and plant"
                ],
                "styles": ["educational", "clean", "organized"],
                "moods": ["helpful", "informative", "practical"]
            },
            
            # MOTIVATION & INSPIRATION
            "morning_motivation": {
                "themes": [
                    "sunrise over mountains with inspirational quote space",
                    "cup of coffee with steam forming success word",
                    "runner silhouette against sunrise on empty road",
                    "alarm clock at 5am with motivated person stretching",
                    "journal open to goals page with morning coffee",
                    "meditation space with candles at dawn"
                ],
                "styles": ["energizing", "fresh", "uplifting"],
                "moods": ["determined", "positive", "focused"]
            },
            
            "success_quotes": {
                "themes": [
                    "eagle soaring above clouds in dramatic sky",
                    "chess king piece standing tall among fallen pieces",
                    "lighthouse standing strong against stormy waves",
                    "arrow hitting bullseye target perfectly",
                    "phoenix rising from ashes with golden flames",
                    "mountain climber reaching summit at sunrise"
                ],
                "styles": ["dramatic", "powerful", "bold"],
                "moods": ["triumphant", "resilient", "victorious"]
            },
            
            # LIFESTYLE & WELLNESS
            "healthy_habits": {
                "themes": [
                    "morning yoga session in bright minimalist room",
                    "colorful smoothie bowl with fresh fruits arranged",
                    "running shoes on trail with sunrise in background",
                    "meal prep containers organized for the week",
                    "water bottle with hourly markers for hydration",
                    "sleep tracking app showing perfect sleep score"
                ],
                "styles": ["healthy", "vibrant", "fresh"],
                "moods": ["energetic", "balanced", "vital"]
            },
            
            "productivity_tips": {
                "themes": [
                    "perfectly organized desk with color coded supplies",
                    "bullet journal spread with weekly planning layout",
                    "pomodoro timer next to focused work setup",
                    "clean inbox zero email screenshot celebration",
                    "morning routine checklist being checked off",
                    "digital detox space with phone in drawer"
                ],
                "styles": ["organized", "efficient", "minimal"],
                "moods": ["productive", "accomplished", "focused"]
            },
            
            "self_care": {
                "themes": [
                    "relaxing bath setup with candles and flowers",
                    "cozy reading nook with soft blanket and tea",
                    "skincare routine products arranged aesthetically",
                    "meditation corner with cushions and plants",
                    "journal with gratitude list being written",
                    "walk in nature path during golden hour"
                ],
                "styles": ["calming", "peaceful", "gentle"],
                "moods": ["relaxed", "content", "mindful"]
            },
            
            # HOME & LIFESTYLE
            "home_decor": {
                "themes": [
                    "scandinavian living room with natural light",
                    "boho bedroom with macrame and plants",
                    "minimalist kitchen with marble countertops",
                    "cozy reading corner with built in bookshelves",
                    "home office with gallery wall inspiration",
                    "bathroom with spa-like atmosphere and plants"
                ],
                "styles": ["aesthetic", "cozy", "stylish"],
                "moods": ["welcoming", "comfortable", "inspiring"]
            },
            
            "organization": {
                "themes": [
                    "pantry with labeled glass containers in rows",
                    "closet color coordinated with matching hangers",
                    "garage with pegboard tool organization system",
                    "kids playroom with labeled toy storage bins",
                    "bathroom cabinet with drawer organizers",
                    "office supplies in aesthetic desktop organizers"
                ],
                "styles": ["neat", "systematic", "satisfying"],
                "moods": ["accomplished", "efficient", "proud"]
            }
        }

        # ============================================
        # GÖRSEL ÇEŞİTLİLİK PARAMETRELERİ
        # ============================================
        
        visual_variations = {
            "color_palettes": [
                "warm golden tones with cream and beige",
                "cool blues with white and silver accents",
                "earth tones with green and brown",
                "pastel pink with mint green touches",
                "monochrome black and white minimal",
                "sunset colors orange pink purple gradient",
                "forest green with natural wood textures",
                "ocean blues with sandy beige elements",
                "burgundy with gold luxurious accents",
                "soft grey with pops of yellow energy"
            ],
            
            "lighting_styles": [
                "soft morning light through window",
                "golden hour warm side lighting",
                "bright airy overcast day light",
                "dramatic shadows and highlights",
                "soft diffused studio lighting",
                "natural outdoor midday sun",
                "cozy indoor warm lamp light",
                "blue hour twilight ambiance",
                "backlit silhouette effect",
                "candlelit warm glow atmosphere"
            ],
            
            "compositions": [
                "rule of thirds balanced layout",
                "centered symmetrical composition",
                "diagonal lines creating movement",
                "negative space minimalist style",
                "flat lay top down view",
                "close up macro detail shot",
                "wide angle environmental context",
                "portrait orientation vertical",
                "leading lines drawing eye",
                "frame within frame technique"
            ],
            
            "textures": [
                "smooth marble surfaces",
                "rough wood grain details",
                "soft fabric textures",
                "glossy reflective surfaces",
                "matte paper backgrounds",
                "natural stone textures",
                "velvet luxury feeling",
                "crisp clean lines",
                "organic natural patterns",
                "geometric modern shapes"
            ]
        }

        # ============================================
        # SÜPER RASTGELE PROMPT OLUŞTURUCU
        # ============================================
        
        def generate_unique_prompt():
            """Her seferinde tamamen farklı görsel"""
            
            # Rastgele kategori seç
            category = random.choice(list(mega_content_library.keys()))
            content = mega_content_library[category]
            
            # Temel tema
            theme = random.choice(content["themes"])
            
            # Görsel varyasyonlar ekle
            color = random.choice(visual_variations["color_palettes"])
            lighting = random.choice(visual_variations["lighting_styles"])
            composition = random.choice(visual_variations["compositions"])
            texture = random.choice(visual_variations["textures"])
            
            # Stil ve mood
            style = random.choice(content["styles"])
            mood = random.choice(content["moods"])
            
            # Ekstra detaylar için random elementler
            time_of_day = random.choice(["early morning", "midday", "afternoon", "golden hour", "blue hour"])
            weather = random.choice(["clear sky", "soft clouds", "after rain", "misty", "sunny"])
            season = random.choice(["spring", "summer", "autumn", "winter"])
            
            # Prompt varyasyonları - her seferinde farklı yapı
            prompt_templates = [
                f"{theme}, {color}, {lighting}, {composition}, {style} style, {mood} mood, {time_of_day}",
                f"{style} photography of {theme}, {texture}, {lighting}, {mood} atmosphere, {season} vibes",
                f"{composition} shot of {theme}, {color}, {weather}, {style} aesthetic, {mood} feeling",
                f"{theme}, captured with {lighting}, {texture} elements, {color}, {style} and {mood}",
                f"{mood} scene showing {theme}, {time_of_day} lighting, {composition}, {style} approach"
            ]
            
            prompt = random.choice(prompt_templates)
            
            # Kalite eklemeleri
            quality_additions = [
                "high quality, professional photography",
                "8k resolution, ultra detailed",
                "crisp and clear, magazine quality",
                "pinterest aesthetic, trending style",
                "beautiful composition, eye-catching"
            ]
            
            prompt += f", {random.choice(quality_additions)}"
            prompt += ", no text, no watermarks, vertical format"
            
            return prompt, category

        # ============================================
        # BENZERSİZ BAŞLIK VE AÇIKLAMA
        # ============================================
        
        def generate_unique_content(category):
            """Her pin için benzersiz içerik"""
            
            # Kategori bazlı başlık şablonları
            title_templates = {
                "luxury_lifestyle": [
                    f"Day {random.randint(1,365)} of Building Wealth 💰",
                    f"{random.choice(['Morning','Evening','Daily'])} Millionaire Routine ✨",
                    f"Wealth Tip #{random.randint(1,999)} 🎯",
                    f"{datetime.now().strftime('%B')} Financial Goals 📈",
                    f"Success Story: Chapter {random.randint(1,100)} 📖"
                ],
                "money_mindset": [
                    f"Money Mindset Shift #{random.randint(1,500)} 🧠",
                    f"{random.choice(['Transform','Change','Upgrade'])} Your Money Story 💫",
                    f"Financial Freedom Day {random.randint(1,1000)} 🚀",
                    f"Abundance Mindset {datetime.now().strftime('%A')} 🌟",
                    f"Wealth Building Block #{random.randint(1,200)} 🏗️"
                ],
                "financial_education": [
                    f"Money Lesson {random.randint(1,365)} 📚",
                    f"{random.choice(['Beginner','Smart','Essential'])} Finance Tip 💡",
                    f"Budget Better: Tip {random.randint(1,100)} 📊",
                    f"Savings Hack #{random.randint(1,250)} 💰",
                    f"Investment 101: Part {random.randint(1,50)} 📈"
                ],
                "morning_motivation": [
                    f"{datetime.now().strftime('%A')} Motivation 🌅",
                    f"Day {random.randint(1,365)} Wake Up Call ☕",
                    f"Morning Mantra #{random.randint(1,500)} 🙏",
                    f"Rise & Grind: Day {random.randint(1,100)} 💪",
                    f"AM Inspiration {datetime.now().strftime('%m.%d')} ⭐"
                ],
                "success_quotes": [
                    f"Success Quote #{random.randint(1,999)} 🏆",
                    f"{random.choice(['Daily','Power','Winner'])} Wisdom 🎯",
                    f"Motivational {datetime.now().strftime('%B %Y')} 💫",
                    f"Quote of the Day: {random.randint(1,365)} 📌",
                    f"Success Principle #{random.randint(1,200)} 🚀"
                ]
            }
            
            # Default başlıklar
            default_titles = [
                f"Tip of the Day #{random.randint(1,999)} 💡",
                f"{datetime.now().strftime('%B')} Inspiration ✨",
                f"Life Hack #{random.randint(1,500)} 🌟",
                f"Daily Reminder {datetime.now().strftime('%m/%d')} 📌",
                f"Wisdom Wednesday Week {datetime.now().isocalendar()[1]} 🎯"
            ]
            
            # Başlık seç
            if category in title_templates:
                title = random.choice(title_templates[category])
            else:
                title = random.choice(default_titles)
            
            # Benzersiz açıklama oluştur
            description_intros = [
                "Here's something I learned today:",
                "Reminder for myself (and you):",
                "This changed my perspective:",
                "Something to think about:",
                "Today's reflection:",
                f"{datetime.now().strftime('%B')} thoughts:",
                "Sharing this gem with you:",
                "File this under important:",
                "Don't forget this one:",
                "Worth reading twice:"
            ]
            
            description_bodies = [
                "Every small step counts towards your bigger goals.",
                "Success is built one day at a time.",
                "Your future self will thank you for starting today.",
                "Consistency beats perfection every single time.",
                "The best time to start was yesterday. Second best? Now.",
                "Small changes lead to remarkable results.",
                "Focus on progress, not perfection.",
                "Your habits determine your future.",
                "Invest in yourself - it pays the best interest.",
                "Dream big, start small, but most importantly - start."
            ]
            
            description_ctas = [
                "What's your goal today?",
                "Drop a ❤️ if you needed this!",
                "Save for later motivation!",
                "Share with someone who needs this.",
                "Comment your thoughts below!",
                "Double tap if you agree!",
                "What's your take on this?",
                "Pin this for daily reminder!",
                "Tag someone who inspires you!",
                "Your turn - what motivates you?"
            ]
            
            # Açıklama oluştur
            intro = random.choice(description_intros)
            body = random.choice(description_bodies)
            cta = random.choice(description_ctas)
            
            description = f"{intro} {body} {cta}"
            
            # Pinterest spam engeli nedeniyle link EKLENMİYOR
            # Domain claim edildikten sonra tekrar aktif edilebilir
            # Website trafiği için alternatif: Bio'da link, boards, profile
            
            # Hashtag stratejisi - çeşitli ve organik
            hashtag_sets = [
                ["motivation", "inspiration", "success", "mindset", "goals"],
                ["wealth", "money", "finance", "richlife", "abundance"],
                ["lifestyle", "wellness", "selfcare", "healthy", "happiness"],
                ["productivity", "organization", "planning", "efficiency", "tips"],
                ["entrepreneur", "business", "hustle", "growth", "winning"],
                ["personaldevelopment", "selfimprovement", "betterme", "change", "transform"],
                ["morningmotivation", "dailyinspiration", "quotestoliveby", "wisdom", "truth"],
                ["financialfreedom", "investing", "savings", "budgeting", "moneytips"]
            ]
            
            # 2-3 set seç ve karıştır
            selected_tags = []
            for _ in range(random.randint(2, 3)):
                selected_tags.extend(random.sample(random.choice(hashtag_sets), 2))
            
            # Benzersizleştir ve sınırla
            selected_tags = list(set(selected_tags))[:random.randint(5, 8)]
            hashtags = " ".join([f"#{tag}" for tag in selected_tags])
            
            final_description = f"{description}\n\n{hashtags}"
            
            return title, final_description

        # ============================================
        # GÖRSEL OLUŞTURMA - MAKSİMUM ÇEŞİTLİLİK
        # ============================================
        
        def create_diverse_image(prompt):
            """Her seferinde farklı görsel"""
            
            encoded_prompt = urllib.parse.quote(prompt)
            
            # Süper unique seed
            timestamp = int(datetime.now().timestamp() * 1000)
            random_component = random.randint(1, 999999999)
            prompt_hash = abs(hash(prompt))
            super_seed = (timestamp + random_component + prompt_hash) % 100000000
            
            # Farklı boyutlar (Pinterest optimized)
            size_variations = [
                {"width": 1000, "height": 1500, "name": "standard"},
                {"width": 1000, "height": 1400, "name": "slightly_shorter"},
                {"width": 900, "height": 1350, "name": "medium"},
                {"width": 1080, "height": 1620, "name": "hd_vertical"},
                {"width": 736, "height": 1104, "name": "classic_pinterest"},
                {"width": 800, "height": 1200, "name": "compact"}
            ]
            
            selected_size = random.choice(size_variations)
            
            # Model varyasyonları (eğer API destekliyorsa)
            models = ["flux", "turbo", "default"]
            selected_model = random.choice(models)
            
            image_url = (
                f"https://image.pollinations.ai/prompt/{encoded_prompt}"
                f"?width={selected_size['width']}"
                f"&height={selected_size['height']}"
                f"&seed={super_seed}"
                f"&model={selected_model}"
                f"&nologo=true"
                f"&enhance=true"
            )
            
            return image_url, super_seed, selected_size['name']

        # ============================================
        # AKILLI PAYLAŞIM SİSTEMİ
        # ============================================
        
        def smart_posting_system():
            """Akıllı ve güvenli paylaşım"""
            
            # Pin sayısını hesapla
            pins_to_post = calculate_safe_pin_count()
            
            if pins_to_post == 0:
                print("📌 Bugünlük yeterli, yarın görüşürüz!")
                return
            
            print(f"\n🎯 {pins_to_post} adet pin paylaşılacak")
            print("-" * 50)
            
            posted_contents = []  # Tekrar önlemek için
            
            for i in range(pins_to_post):
                print(f"\n📍 Pin #{i+1}/{pins_to_post}")
                
                # İnsan davranışı simülasyonu
                if i > 0:
                    wait_time = random.randint(30, 120)
                    print(f"⏳ {wait_time} saniye bekleniyor...")
                    time.sleep(wait_time)
                
                # Benzersiz prompt oluştur
                attempt = 0
                while attempt < 10:
                    prompt, category = generate_unique_prompt()
                    prompt_hash = hash(prompt)
                    
                    if prompt_hash not in posted_contents:
                        posted_contents.append(prompt_hash)
                        break
                    
                    attempt += 1
                    print(f"🔄 Yeni prompt deneniyor... (deneme {attempt})")
                
                print(f"📂 Kategori: {category}")
                print(f"🎨 Prompt: {prompt[:100]}...")
                
                # Görsel oluştur
                image_url, seed, size_name = create_diverse_image(prompt)
                print(f"🖼️ Seed: {seed} | Size: {size_name}")
                
                # İçerik oluştur
                title, description = generate_unique_content(category)
                print(f"📌 Başlık: {title}")
                
                # IFTTT'ye gönder
                success = send_to_pinterest(image_url, title, description)
                
                if success:
                    print(f"✅ Pin #{i+1} başarıyla paylaşıldı!")
                else:
                    print(f"❌ Pin #{i+1} paylaşılamadı")
                
                # Log tut
                log_pin(category, seed, success)

        # ============================================
        # PINTEREST'E GÖNDERME
        # ============================================
        
        def send_to_pinterest(image_url, title, description):
            """IFTTT üzerinden gönder"""
            
            # Event name'i al
            event_name = os.environ.get('IFTTT_EVENT', 'pinterest_paylas')
            
            try:
                ifttt_url = f"https://maker.ifttt.com/trigger/{event_name}/with/key/{os.environ['IFTTT_KEY']}"
                
                payload = {
                    "value1": image_url,
                    "value2": title,
                    "value3": ""  # Link boş - Pinterest spam engeli için
                }
                
                response = requests.post(ifttt_url, json=payload, timeout=30)
                
                if response.status_code == 200:
                    return True
                elif "usage limit" in response.text.lower():
                    print(f"⚠️ {event_name} limit aşımı")
                    return False
                else:
                    print(f"❌ HTTP {response.status_code}: {response.text[:100]}")
                    return False
                    
            except Exception as e:
                print(f"❌ Hata: {str(e)[:100]}")
                return False

        # ============================================
        # LOG SİSTEMİ
        # ============================================
        
        def log_pin(category, seed, success):
            """Paylaşım loglarını tut"""
            
            log_entry = {
                "timestamp": datetime.now().isoformat(),
                "category": category,
                "seed": seed,
                "success": success,
                "account_age": os.environ.get('ACCOUNT_AGE_DAYS', 'unknown')
            }
            
            print(f"📝 Log: {json.dumps(log_entry)}")

        # ============================================
        # ANA PROGRAM
        # ============================================
        
        def main():
            print("=" * 60)
            print("🚀 ADVANCED PINTEREST DIVERSITY ENGINE")
            print(f"📅 {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            print(f"🌐 Website: {os.environ['WEBSITE_URL']}")
            print(f"🔑 Event: {os.environ.get('IFTTT_EVENT', 'pinterest_paylas')}")
            print("=" * 60)
            
            # Rastgele başlangıç gecikmesi (5-30 saniye)
            initial_delay = random.randint(5, 30)
            print(f"\n⏰ {initial_delay} saniye başlangıç gecikmesi...")
            time.sleep(initial_delay)
            
            # Akıllı paylaşım başlat
            smart_posting_system()
            
            print("\n" + "=" * 60)
            print("✨ İşlem tamamlandı!")
            print("=" * 60)

        # Programı çalıştır
        if __name__ == "__main__":
            main()

        EOF
    
    - name: Summary Report
      run: |
        echo "================================"
        echo "📊 PINTEREST AUTOMATION REPORT"
        echo "================================"
        echo "✅ Görev tamamlandı"
        echo "📌 Çeşitlilik maksimumda"
        echo "🔒 Güvenlik önlemleri aktif"
        echo "📈 Hesap sağlığı korunuyor"
        echo "🎯 Event: ${{ secrets.IFTTT_EVENT }}"
        echo "================================"
